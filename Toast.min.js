// toast.js
(function(t){class Toast{constructor(){this.t=document.createElement("div");this.i();document.body.appendChild(this.t)}i(){this.t.style.position="absolute";// Changed to absolute for context positioning
this.t.style.backgroundColor="#333";// Default background color
this.t.style.color="white";this.t.style.padding="10px";this.t.style.borderRadius="5px";this.t.style.opacity="0";this.t.style.transition="opacity 0.5s";this.t.style.zIndex="1000";this.t.style.width="auto";this.t.style.maxWidth="200px";// Set max width
this.t.style.textAlign="center";this.t.style.wordWrap="break-word";// Wrap long text
}show(t,s=3e3,i="#333",h){// Added contextId parameter
this.t.innerText=t;this.t.style.backgroundColor=i;// Set custom color
// If a context ID is provided, position the toast relative to the element
if(h){const o=document.getElementById(h);if(o){const e=o.getBoundingClientRect();this.t.style.left=`${e.left+(e.width-this.t.offsetWidth)/2}px`;this.t.style.top=`${e.bottom+window.scrollY+10}px`;// Position below the context element
this.t.style.position="absolute";// Ensure absolute positioning
}}else{
// Otherwise, center the toast in the viewport
this.t.style.left=`${(window.innerWidth-this.t.offsetWidth)/2}px`;this.t.style.top=`${window.innerHeight/2}px`}
// Show toast
this.t.style.opacity=1;
// Hide after specified duration
setTimeout(()=>{this.t.style.opacity=0},s)}static h(t,s=3e3,i="#333",h){const o=new Toast;o.show(t,s,i,h)}}
// Expose the Toast class to the global object
t.o=Toast})(window);
